{"version":3,"file":"static/js/703.f7d285f0.chunk.js","mappings":"4NAGaA,EAAUC,EAAAA,GAAAA,GAAH,mIAQPC,EAAiBD,EAAAA,GAAAA,GAAH,iWAkBdE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,wPAcVI,EAAcJ,EAAAA,GAAAA,IAAH,kJ,SC/BXK,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACT,EAAD,UACGO,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACT,EAAD,WACE,UAACC,EAAD,CAAYS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAtD,WACE,SAACH,EAAD,CACEW,IACEL,EAAMM,IAAN,yCACsCN,EAAMM,K,8gFAG9CC,IAAKP,EAAMQ,QAEZR,EAAMQ,UAVUR,EAAME,GADZ,KAiBtB,C,iLChCYO,EAAkBnB,EAAAA,GAAAA,IAAH,uJ,SCAfoB,EAAOpB,EAAAA,GAAAA,KAAH,oPAaJqB,EAAQrB,EAAAA,GAAAA,MAAH,kOAaLsB,EAAStB,EAAAA,GAAAA,OAAH,+U,SCpBNuB,EAAa,SAAC,GAAsB,IAAD,EAAnBC,EAAmB,EAAnBA,aAC3B,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACA,GAAsCC,EAAAA,EAAAA,UAAQ,UAC5CD,EAAaE,IAAI,gBAD2B,QACf,IAD/B,eAAOC,EAAP,KAAoBC,EAApB,KAsBA,OACE,UAACV,EAAD,CAAMW,SAnBiB,SAAAC,GACvBA,EAAIC,iBAEuB,KAAvBJ,EAAYK,QAOhBV,EAAaK,EAAYK,QACzBJ,EAAe,KAPbK,EAAAA,GAAAA,MACE,4EAOL,EAOC,WACE,SAACd,EAAD,CACEe,KAAK,OACLC,MAAOR,EACPS,SATe,SAAAN,GACnBF,EAAeE,EAAIO,OAAOF,MAC3B,EAQKG,YAAY,iBAEd,SAAClB,EAAD,CAAQc,KAAK,SAAb,SAAsB,aAG3B,E,SCeD,EA9Ce,WACb,OAA8CT,EAAAA,EAAAA,UAAS,IAAvD,eAAOc,EAAP,KAAwBC,EAAxB,KACA,GAAkCf,EAAAA,EAAAA,WAAS,GAA3C,eAAOgB,EAAP,KAAkBC,EAAlB,KAEA,GAAwCnB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBmB,EAArB,KACMC,EAAQpB,EAAaE,IAAI,UAE/BmB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,WAAMnB,GAAN,yFAEpBe,GAAa,GAFO,UAGGK,EAAAA,EAAAA,IAAapB,GAHhB,OAKY,KAF1BqB,EAHc,QAKPC,QAAQC,OACnBjB,EAAAA,GAAAA,MAAY,qBAENkB,EAAoBH,EAASC,QAAQ1C,KAAI,SAAAC,GAAK,MAAK,CACvDE,GAAIF,EAAME,GACVI,IAAKN,EAAM4C,YACXpC,MAAOR,EAAMQ,MAHqC,IAKpDwB,EAAmBW,IAbD,gDAgBpBlB,EAAAA,GAAAA,MAAA,iBAAsB,KAAMoB,UAhBR,yBAkBpBX,GAAa,GAlBO,4EAAH,sDAsBjBE,GAAOE,EAAgBF,EAC5B,GAAE,CAACA,EAAOD,IAMX,OACE,UAAC1B,EAAD,YACE,SAAC,KAAD,CAAgBqC,UAAW,OAC3B,SAACjC,EAAD,CAAYC,aAPS,SAAAK,GACvBgB,EAAgB,CAAEnC,MAAOmB,GAC1B,IAMIc,GAAY,SAACc,EAAA,EAAD,KAAa,SAACpD,EAAA,EAAD,CAAYC,OAAQmC,MAGnD,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/pages/Movies.styled.jsx","components/SearchForm/SearchForm.styled.component.jsx","components/SearchForm/SearchForm.jsx","components/pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const StyledListItem = styled.li`\n  width: 250px;\n  background-color: #f5f5f5;\n  border-radius: 4px;\n  padding: 10px;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-right: 0;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-decoration: none;\n  color: #333;\n  transition: transform 0.2s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n    color: #f16f6f;\n  }\n`;\n\nexport const StyledImage = styled.img`\n  object-fit: cover;\n  margin-bottom: 10px;\n\n  @media (max-width: 768px) {\n    width: 300px;\n    height: auto;\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport {\n  Wrapper,\n  StyledListItem,\n  StyledLink,\n  StyledImage,\n} from './MoviesList.styled';\n\nimport placeholderImage from './placeholder.jpg';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Wrapper>\n      {movies.map(movie => (\n        <StyledListItem key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <StyledImage\n              src={\n                movie.img\n                  ? `https://image.tmdb.org/t/p/w200${movie.img}`\n                  : placeholderImage\n              }\n              alt={movie.title}\n            />\n            {movie.title}\n          </StyledLink>\n        </StyledListItem>\n      ))}\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  width: 85%;\n  background-color: #fcfcfc;\n  padding: 20px;\n  margin: 0 auto;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    align-items: stretch;\n  }\n`;\n\nexport const Input = styled.input`\n  padding: 10px 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px;\n  width: 400px;\n\n  @media screen and (max-width: 768px) {\n    margin-bottom: 10px;\n    width: 90%;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  background-color: #f16f6f;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  margin-left: 10px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #e94b4b;\n  }\n\n  @media screen and (max-width: 768px) {\n    margin-left: 0;\n    width: 100%;\n  }\n`;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Form, Input, Button } from './SearchForm.styled.component';\n\nexport const SearchForm = ({ handleSubmit }) => {\n  const [searchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(\n    searchParams.get('movie') ?? ''\n  );\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      toast.error(\n        'Empty search query. Please enter a valid search term in the search field.'\n      );\n      return;\n    }\n\n    handleSubmit(searchQuery.trim());\n    setSearchQuery('');\n  };\n\n  const handleChange = evt => {\n    setSearchQuery(evt.target.value);\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Input\n        type=\"text\"\n        value={searchQuery}\n        onChange={handleChange}\n        placeholder=\"Enter movie\"\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Loader } from '../Loader';\nimport { StyledContainer } from './Movies.styled';\nimport { searchMovies } from '../../services/getMovie';\nimport { SearchForm } from '../SearchForm';\nimport { MoviesList } from '../MoviesList';\n\nconst Movies = () => {\n  const [searchingMovies, setSearchingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('movie');\n\n  useEffect(() => {\n    const getSearchMovies = async searchQuery => {\n      try {\n        setIsLoading(true);\n        const response = await searchMovies(searchQuery);\n\n        if (response.results.length === 0) {\n          toast.error('No results found');\n        } else {\n          const transformedMovies = response.results.map(movie => ({\n            id: movie.id,\n            img: movie.poster_path,\n            title: movie.title,\n          }));\n          setSearchingMovies(transformedMovies);\n        }\n      } catch (error) {\n        toast.error(`Error: ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (query) getSearchMovies(query);\n  }, [query, setSearchParams]);\n\n  const handleFormSubmit = searchQuery => {\n    setSearchParams({ movie: searchQuery });\n  };\n\n  return (\n    <StyledContainer>\n      <ToastContainer autoClose={2000} />\n      <SearchForm handleSubmit={handleFormSubmit} />\n      {isLoading ? <Loader /> : <MoviesList movies={searchingMovies} />}\n    </StyledContainer>\n  );\n};\n\nexport default Movies;\n"],"names":["Wrapper","styled","StyledListItem","StyledLink","Link","StyledImage","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","src","img","alt","title","StyledContainer","Form","Input","Button","SearchForm","handleSubmit","useSearchParams","searchParams","useState","get","searchQuery","setSearchQuery","onSubmit","evt","preventDefault","trim","toast","type","value","onChange","target","placeholder","searchingMovies","setSearchingMovies","isLoading","setIsLoading","setSearchParams","query","useEffect","getSearchMovies","searchMovies","response","results","length","transformedMovies","poster_path","message","autoClose","Loader"],"sourceRoot":""}