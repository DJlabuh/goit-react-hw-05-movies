{"version":3,"file":"static/js/416.a244fb38.chunk.js","mappings":"4NAGaA,EAAUC,EAAAA,GAAAA,GAAH,mIAQPC,EAAiBD,EAAAA,GAAAA,GAAH,iWAkBdE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,wPAcVI,EAAcJ,EAAAA,GAAAA,IAAH,oL,SC/BXK,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACT,EAAD,UACGO,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACT,EAAD,WACE,UAACC,EAAD,CAAYS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAtD,WACE,SAACH,EAAD,CACEW,IACEL,EAAMM,IAAN,yCACsCN,EAAMM,K,8gFAG9CC,IAAKP,EAAMQ,QAEZR,EAAMQ,UAVUR,EAAME,GADZ,KAiBtB,C,uLChCYO,EAAkBnB,EAAAA,GAAAA,IAAH,uJAQfoB,EAAgBpB,EAAAA,GAAAA,GAAH,2G,SCkC1B,EAjCa,WACX,OAA4BqB,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,gHAEGC,EAAAA,EAAAA,MAFH,OAEVC,EAFU,OAGVC,EAAmBD,EAAKE,QAAQrB,KAAI,SAAAC,GAAK,MAAK,CAClDE,GAAIF,EAAME,GACVI,IAAKN,EAAMqB,YACXb,MAAOR,EAAMQ,OAASR,EAAMsB,KAHiB,IAK/CV,EAAUO,GACVL,GAAa,GATG,gDAWhBS,EAAAA,GAAAA,MAAA,iBAAsB,KAAMC,UAC5BV,GAAa,GAZG,yDAAH,qDAgBjBE,GACD,GAAE,KAGD,UAACP,EAAD,YACE,SAACC,EAAD,UAAe,oBACf,SAAC,KAAD,CAAgBe,UAAW,MAC1BZ,GAAY,SAACa,EAAA,EAAD,KAAa,SAAC/B,EAAA,EAAD,CAAYC,OAAQA,MAGnD,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/pages/Home.styled.jsx","components/pages/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const StyledListItem = styled.li`\n  width: 250px;\n  background-color: #f5f5f5;\n  border-radius: 4px;\n  padding: 10px;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-right: 0;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-decoration: none;\n  color: #333;\n  transition: transform 0.2s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n    color: #f16f6f;\n  }\n`;\n\nexport const StyledImage = styled.img`\n  width: 200px;\n  height: 300px;\n  object-fit: cover;\n  margin-bottom: 10px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    height: auto;\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport {\n  Wrapper,\n  StyledListItem,\n  StyledLink,\n  StyledImage,\n} from './MoviesList.styled';\n\nimport placeholderImage from './placeholder.jpg';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Wrapper>\n      {movies.map(movie => (\n        <StyledListItem key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <StyledImage\n              src={\n                movie.img\n                  ? `https://image.tmdb.org/t/p/w200${movie.img}`\n                  : placeholderImage\n              }\n              alt={movie.title}\n            />\n            {movie.title}\n          </StyledLink>\n        </StyledListItem>\n      ))}\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  padding: 20px;\n  width: 85%;\n  background-color: #fcfcfc;\n  margin: 0 auto;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n`;\n\nexport const StyledHeading = styled.h2`\n  color: #333;\n  font-size: 24px;\n  margin-bottom: 30px;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getMovies } from '../../services/getMovie';\n\nimport { Loader } from '../Loader';\nimport { MoviesList } from '../MoviesList';\nimport { StyledContainer, StyledHeading } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const data = await getMovies();\n        const simplifiedMovies = data.results.map(movie => ({\n          id: movie.id,\n          img: movie.poster_path,\n          title: movie.title || movie.name,\n        }));\n        setMovies(simplifiedMovies);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error(`Error: ${error.message}`);\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <StyledContainer>\n      <StyledHeading>Trending today</StyledHeading>\n      <ToastContainer autoClose={2000} />\n      {isLoading ? <Loader /> : <MoviesList movies={movies} />}\n    </StyledContainer>\n  );\n};\n\nexport default Home;\n"],"names":["Wrapper","styled","StyledListItem","StyledLink","Link","StyledImage","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","src","img","alt","title","StyledContainer","StyledHeading","useState","setMovies","isLoading","setIsLoading","useEffect","fetchMovies","getMovies","data","simplifiedMovies","results","poster_path","name","toast","message","autoClose","Loader"],"sourceRoot":""}